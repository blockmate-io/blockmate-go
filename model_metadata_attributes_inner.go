/*
Blockmate

Blockmate API OpenAPI documentation

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blockmate

import (
	"encoding/json"
)

// MetadataAttributesInner struct for MetadataAttributesInner
type MetadataAttributesInner struct {
	Value *string `json:"value,omitempty"`
	TraitType *string `json:"trait_type,omitempty"`
}

// NewMetadataAttributesInner instantiates a new MetadataAttributesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataAttributesInner() *MetadataAttributesInner {
	this := MetadataAttributesInner{}
	return &this
}

// NewMetadataAttributesInnerWithDefaults instantiates a new MetadataAttributesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataAttributesInnerWithDefaults() *MetadataAttributesInner {
	this := MetadataAttributesInner{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *MetadataAttributesInner) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataAttributesInner) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *MetadataAttributesInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *MetadataAttributesInner) SetValue(v string) {
	o.Value = &v
}

// GetTraitType returns the TraitType field value if set, zero value otherwise.
func (o *MetadataAttributesInner) GetTraitType() string {
	if o == nil || o.TraitType == nil {
		var ret string
		return ret
	}
	return *o.TraitType
}

// GetTraitTypeOk returns a tuple with the TraitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataAttributesInner) GetTraitTypeOk() (*string, bool) {
	if o == nil || o.TraitType == nil {
		return nil, false
	}
	return o.TraitType, true
}

// HasTraitType returns a boolean if a field has been set.
func (o *MetadataAttributesInner) HasTraitType() bool {
	if o != nil && o.TraitType != nil {
		return true
	}

	return false
}

// SetTraitType gets a reference to the given string and assigns it to the TraitType field.
func (o *MetadataAttributesInner) SetTraitType(v string) {
	o.TraitType = &v
}

func (o MetadataAttributesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.TraitType != nil {
		toSerialize["trait_type"] = o.TraitType
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataAttributesInner struct {
	value *MetadataAttributesInner
	isSet bool
}

func (v NullableMetadataAttributesInner) Get() *MetadataAttributesInner {
	return v.value
}

func (v *NullableMetadataAttributesInner) Set(val *MetadataAttributesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataAttributesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataAttributesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataAttributesInner(val *MetadataAttributesInner) *NullableMetadataAttributesInner {
	return &NullableMetadataAttributesInner{value: val, isSet: true}
}

func (v NullableMetadataAttributesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataAttributesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


