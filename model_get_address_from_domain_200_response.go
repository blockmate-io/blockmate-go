/*
Blockmate

Blockmate API OpenAPI documentation

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blockmate

import (
	"encoding/json"
)

// GetAddressFromDomain200Response struct for GetAddressFromDomain200Response
type GetAddressFromDomain200Response struct {
	Address *string `json:"address,omitempty"`
}

// NewGetAddressFromDomain200Response instantiates a new GetAddressFromDomain200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAddressFromDomain200Response() *GetAddressFromDomain200Response {
	this := GetAddressFromDomain200Response{}
	return &this
}

// NewGetAddressFromDomain200ResponseWithDefaults instantiates a new GetAddressFromDomain200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAddressFromDomain200ResponseWithDefaults() *GetAddressFromDomain200Response {
	this := GetAddressFromDomain200Response{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetAddressFromDomain200Response) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAddressFromDomain200Response) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetAddressFromDomain200Response) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetAddressFromDomain200Response) SetAddress(v string) {
	o.Address = &v
}

func (o GetAddressFromDomain200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableGetAddressFromDomain200Response struct {
	value *GetAddressFromDomain200Response
	isSet bool
}

func (v NullableGetAddressFromDomain200Response) Get() *GetAddressFromDomain200Response {
	return v.value
}

func (v *NullableGetAddressFromDomain200Response) Set(val *GetAddressFromDomain200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAddressFromDomain200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAddressFromDomain200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAddressFromDomain200Response(val *GetAddressFromDomain200Response) *NullableGetAddressFromDomain200Response {
	return &NullableGetAddressFromDomain200Response{value: val, isSet: true}
}

func (v NullableGetAddressFromDomain200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAddressFromDomain200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


