/*
Blockmate

Blockmate API OpenAPI documentation

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blockmate

import (
	"encoding/json"
)

// ConnectAccount400Response struct for ConnectAccount400Response
type ConnectAccount400Response struct {
	Detail *string `json:"detail,omitempty"`
}

// NewConnectAccount400Response instantiates a new ConnectAccount400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectAccount400Response() *ConnectAccount400Response {
	this := ConnectAccount400Response{}
	return &this
}

// NewConnectAccount400ResponseWithDefaults instantiates a new ConnectAccount400Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectAccount400ResponseWithDefaults() *ConnectAccount400Response {
	this := ConnectAccount400Response{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ConnectAccount400Response) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectAccount400Response) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ConnectAccount400Response) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ConnectAccount400Response) SetDetail(v string) {
	o.Detail = &v
}

func (o ConnectAccount400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableConnectAccount400Response struct {
	value *ConnectAccount400Response
	isSet bool
}

func (v NullableConnectAccount400Response) Get() *ConnectAccount400Response {
	return v.value
}

func (v *NullableConnectAccount400Response) Set(val *ConnectAccount400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectAccount400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectAccount400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectAccount400Response(val *ConnectAccount400Response) *NullableConnectAccount400Response {
	return &NullableConnectAccount400Response{value: val, isSet: true}
}

func (v NullableConnectAccount400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectAccount400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


