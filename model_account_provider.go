/*
Blockmate

Blockmate API OpenAPI documentation

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blockmate

import (
	"encoding/json"
)

// AccountProvider Account provider
type AccountProvider struct {
	Name string `json:"name"`
	Type string `json:"type"`
	Url string `json:"url"`
}

// NewAccountProvider instantiates a new AccountProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountProvider(name string, type_ string, url string) *AccountProvider {
	this := AccountProvider{}
	this.Name = name
	this.Type = type_
	this.Url = url
	return &this
}

// NewAccountProviderWithDefaults instantiates a new AccountProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountProviderWithDefaults() *AccountProvider {
	this := AccountProvider{}
	return &this
}

// GetName returns the Name field value
func (o *AccountProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountProvider) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AccountProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountProvider) SetType(v string) {
	o.Type = v
}

// GetUrl returns the Url field value
func (o *AccountProvider) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AccountProvider) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AccountProvider) SetUrl(v string) {
	o.Url = v
}

func (o AccountProvider) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableAccountProvider struct {
	value *AccountProvider
	isSet bool
}

func (v NullableAccountProvider) Get() *AccountProvider {
	return v.value
}

func (v *NullableAccountProvider) Set(val *AccountProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountProvider(val *AccountProvider) *NullableAccountProvider {
	return &NullableAccountProvider{value: val, isSet: true}
}

func (v NullableAccountProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


