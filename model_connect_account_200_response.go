/*
Blockmate

Blockmate API OpenAPI documentation

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blockmate

import (
	"encoding/json"
)

// ConnectAccount200Response struct for ConnectAccount200Response
type ConnectAccount200Response struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Description string `json:"description"`
	Verified bool `json:"verified"`
}

// NewConnectAccount200Response instantiates a new ConnectAccount200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectAccount200Response(id string, name string, description string, verified bool) *ConnectAccount200Response {
	this := ConnectAccount200Response{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Verified = verified
	return &this
}

// NewConnectAccount200ResponseWithDefaults instantiates a new ConnectAccount200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectAccount200ResponseWithDefaults() *ConnectAccount200Response {
	this := ConnectAccount200Response{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectAccount200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectAccount200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectAccount200Response) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ConnectAccount200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConnectAccount200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConnectAccount200Response) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *ConnectAccount200Response) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ConnectAccount200Response) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ConnectAccount200Response) SetDescription(v string) {
	o.Description = v
}

// GetVerified returns the Verified field value
func (o *ConnectAccount200Response) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *ConnectAccount200Response) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *ConnectAccount200Response) SetVerified(v bool) {
	o.Verified = v
}

func (o ConnectAccount200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["verified"] = o.Verified
	}
	return json.Marshal(toSerialize)
}

type NullableConnectAccount200Response struct {
	value *ConnectAccount200Response
	isSet bool
}

func (v NullableConnectAccount200Response) Get() *ConnectAccount200Response {
	return v.value
}

func (v *NullableConnectAccount200Response) Set(val *ConnectAccount200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectAccount200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectAccount200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectAccount200Response(val *ConnectAccount200Response) *NullableConnectAccount200Response {
	return &NullableConnectAccount200Response{value: val, isSet: true}
}

func (v NullableConnectAccount200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectAccount200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


